{"version":3,"file":"static/js/654.5b397fa0.chunk.js","mappings":"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","sources":["components/ContactForm/ContactFormStyled.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.jsx","components/ContactList/ContactListStyled.jsx","components/ContactList/ContactList.jsx","redux/utils.jsx","components/ContactForm/ContactForm.jsx","components/Filter/FilterStyled.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx","pages/pagesStyled.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  border: 3px solid black;\n  border-radius: 5px;\n  padding: 16px;\n  min-width: 60vh;\n  margin-bottom: 24px;\n`;\n\nexport const InputContainers = styled.div`\n  gap: 16px;\n\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n\n  margin-bottom: 24px;\n`;\n\nexport const LabelStyled = styled.label`\n  font-size: 24px;\n`;\n\nexport const InputStyled = styled.input`\n  background-color: #f5f5f5;\n  border-radius: 5px;\n  box-shadow: 0 2px 4px rgb(0 0 0 / 20%);\n  transition: box-shadow 0.3s ease;\n\n  font-size: 16px;\n  padding: 8px;\n  border: 1px solid #ccc;\n  min-width: 200px;\n  &:hover,\n  &:focus,\n  &:active {\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\n    cursor: pointer;\n  }\n`;\n\nexport const Button = styled.button`\n  font-size: 16px;\n  padding: 8px 16px;\n  background-color: #0080ff;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  &:hover,\n  &:focus {\n    background-color: #0022cc;\n  }\n`;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContactsItems = state => state.contacts.contacts.items;\nexport const selectFilter = state => state.contacts.filter;\n\n\nexport const selectLoadingValue = state => state.contacts.contacts.isLoading;\nexport const selectError = state => state.contacts.contacts.error;\n\nexport const applayFilter = createSelector([selectContactsItems, selectFilter],\n(contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from '@emotion/styled';\n\nexport const Ul = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  max-width: 75vh;\n`;\n\nexport const Li = styled.li`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: baseline;\n  gap: 64px;\n\n  margin: 10px 0;\n  padding: 10px;\n  background-color: #f5f5f5;\n  border-radius: 5px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  transition: all 0.3s ease;\n  &:hover,\n  &:focus,\n  &:active {\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\n  }\n`;\n\nexport const Span = styled.span`\n  font-size: 18px;\n`;\nexport const DeleteButton = styled.button`\n  font-size: 16px;\n  padding: 8px 16px;\n  background-color: #dc3545;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  &:hover,\n  &:focus {\n    background-color: #c82333;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchAllContacts } from 'redux/contacts/operations';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { getFilteredContacts } from 'redux/utils';\nimport { Li, Ul, Span, DeleteButton } from './ContactListStyled';\nimport { selectContactsItems, selectFilter } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsItems);\n  const filter = useSelector(selectFilter);\n\n  const filteredContacts = getFilteredContacts(contacts, filter);\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n  return (\n    <Ul>\n      {filteredContacts.map(contact => (\n        <Li key={contact.id}>\n          <Span>\n            {contact.name}\n            &nbsp;&nbsp;&nbsp;&nbsp;\n            {contact.number}\n          </Span>\n\n          <DeleteButton\n            type=\"button\"\n            onClick={() => {\n              dispatch(deleteContact(contact.id));\n            }}\n          >\n            Delete\n          </DeleteButton>\n        </Li>\n      ))}\n    </Ul>\n  );\n};\n","\nexport const getFilteredContacts = (contacts, filter) => {\n  const result = [...contacts].filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLocaleLowerCase())\n  );\n  return result;\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContactsItems } from 'redux/contacts/selectors';\nimport {\n  Form,\n  InputContainers,\n  LabelStyled,\n  InputStyled,\n  Button,\n} from './ContactFormStyled';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsItems);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const nameValue = e.target.elements.name.value;\n    const numberValue = e.target.elements.number.value;\n\n    const existingContact = contacts.find(\n      contact => contact.name === nameValue\n    );\n\n    if (existingContact) {\n      alert('Contact with this name already exists');\n    } else {\n      dispatch(addContact({ name: nameValue, number: numberValue }));\n      form.reset();\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <InputContainers>\n        <LabelStyled>Name</LabelStyled>\n        <InputStyled\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <LabelStyled>Number</LabelStyled>\n        <InputStyled\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </InputContainers>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  font-size: 22px;\n  margin-right: 22px;\n`;\n\nexport const Input = styled.input`\n  background-color: #f5f5f5;\n  border-radius: 5px;\n  box-shadow: 0 2px 4px rgb(0 0 0 / 20%);\n  transition: all 0.3s ease;\n\n  font-size: 16px;\n  padding: 8px;\n  border: 1px solid #0062cc;\n  width: 200px;\n  &:hover,\n  &:focus,\n  &:active {\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\n    cursor: pointer;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Label, Input } from './FilterStyled';\n\nimport { userFilter } from 'redux/contacts/slice';\nimport { selectFilter } from 'redux/contacts/selectors';\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const handleFilterChange = e => {\n    const filterValue = e.target.value;\n    dispatch(userFilter(filterValue));\n  };\n\n  return (\n    <div>\n      <Label>Find contacts by name:</Label>\n      <Input type=\"text\" onChange={handleFilterChange} defaultValue={filter} />\n    </div>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchAllContacts } from 'redux/contacts/operations';\nimport {\n  selectLoadingValue,\n  selectError,\n  applayFilter,\n} from 'redux/contacts/selectors';\nimport { selectToken } from 'redux/auth/selectors';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { Filter } from '../components/Filter/Filter';\n  import {\n    WrapperHome,\n    // WrapperHome2,\n    H2Home,\n    // LabelStyled,\n  } from './pagesStyled';\n\nexport const Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoadingValue);\n  const error = useSelector(selectError);\n  const token = useSelector(selectToken);\n  const contactsList = useSelector(applayFilter);\n\n\n\n\n  useEffect(() => {\n    token && dispatch(fetchAllContacts());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [token]);\n\n  return (\n    <WrapperHome>\n      <H2Home>Phonebook</H2Home>\n      <ContactForm />\n\n      <Filter />\n      {contactsList.length === 0 ? (\n        <H2Home>Add your contacts</H2Home>\n      ) : (\n        <H2Home>Contacts</H2Home>\n      )}\n\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactList />\n    </WrapperHome>\n  );\n};\n\nexport default Contacts;","import styled from '@emotion/styled';\n\nexport const RegistrationWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-content: center;\n\n  border: 3px solid black;\n  border-radius: 5px;\n  padding: 16px;\n  min-width: 60vh;\n  max-width: 60vh;\n  margin-bottom: 24px;\n`;\n\nexport const InputContainers = styled.div`\n  gap: 16px;\n  min-width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n\n  margin-bottom: 24px;\n`;\n\nexport const LabelStyled = styled.label`\n  font-size: 24px;\n  text-align: center;\n`;\n\nexport const InputStyled = styled.input`\n  background-color: (rgb(232, 240, 254), rgba(70, 90, 126, 0.4)) ;\n  border-radius: 5px;\n  box-shadow: 0 2px 4px rgb(0 0 0 / 20%);\n  transition: box-shadow 0.3s ease;\n\n  font-size: 16px;\n  padding: 8px;\n  border: 1px solid #ccc;\n  \n  &:hover,\n  &:focus,\n  &:active {\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\n    cursor: pointer;\n  }\n`;\n\nexport const Button = styled.button`\n  font-size: 16px;\n  padding: 8px 16px;\n  background-color: #0080ff;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  &:hover,\n  &:focus {\n    background-color: #0022cc;\n  }\n`;\n\nexport const H1Home = styled.h1`\n  text-align: center;\n`;\nexport const H2Home = styled.h2`\n  text-align: center;\n`;\nexport const WrapperHome = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-content: center;\n`;\n\nexport const WrapperHome2 = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n`;"],"names":["Form","styled","InputContainers","LabelStyled","InputStyled","Button","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContactsItems","state","contacts","items","selectFilter","filter","selectLoadingValue","isLoading","selectError","error","applayFilter","contact","toLowerCase","includes","Ul","Li","Span","DeleteButton","ContactList","dispatch","useDispatch","filteredContacts","toLocaleLowerCase","getFilteredContacts","useSelector","useEffect","fetchAllContacts","number","type","onClick","deleteContact","id","ContactForm","onSubmit","e","preventDefault","form","target","nameValue","elements","numberValue","alert","addContact","reset","pattern","title","required","Label","Input","Filter","onChange","filterValue","userFilter","defaultValue","Contacts","token","selectToken","contactsList","RegistrationWrapper","H1Home","H2Home","WrapperHome","WrapperHome2"],"sourceRoot":""}
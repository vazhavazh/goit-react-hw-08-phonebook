{"version":3,"file":"static/js/655.cbd7a177.chunk.js","mappings":"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","sources":["redux/contacts/selectors.jsx","components/ContactList/ContactListStyled.jsx","components/ContactList/ContactList.jsx","redux/utils.jsx","components/ContactForm/ContactFormStyled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/FilterStyled.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContactsItems = state => state.contacts.contacts.items;\nexport const selectFilter = state => state.contacts.filter;\n\n\nexport const selectLoadingValue = state => state.contacts.contacts.isLoading;\nexport const selectError = state => state.contacts.contacts.error;\n\nexport const applayFilter = createSelector(\n  [selectContactsItems, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from '@emotion/styled';\n\nexport const Ul = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  max-width: 75vh;\n`;\n\nexport const Li = styled.li`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: baseline;\n  gap: 64px;\n\n  margin: 10px 0;\n  padding: 10px;\n  background-color: #f5f5f5;\n  border-radius: 5px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  transition: all 0.3s ease;\n  &:hover,\n  &:focus,\n  &:active {\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\n  }\n`;\n\nexport const Span = styled.span`\n  font-size: 18px;\n`;\nexport const DeleteButton = styled.button`\n  font-size: 16px;\n  padding: 8px 16px;\n  background-color: #dc3545;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  &:hover,\n  &:focus {\n    background-color: #c82333;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchAllContacts } from 'redux/contacts/operations';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { getFilteredContacts } from 'redux/utils';\nimport { Li, Ul, Span, DeleteButton } from './ContactListStyled';\nimport { selectContactsItems, selectFilter } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsItems);\n  const filter = useSelector(selectFilter);\n\n  const filteredContacts = getFilteredContacts(contacts, filter);\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n  return (\n    <Ul>\n      {filteredContacts.map(contact => (\n        <Li key={contact.id}>\n          <Span>\n            {contact.name}\n            &nbsp;&nbsp;&nbsp;&nbsp;\n            {contact.number}\n          </Span>\n\n          <DeleteButton\n            type=\"button\"\n            onClick={() => {\n              dispatch(deleteContact(contact.id));\n            }}\n          >\n            Delete\n          </DeleteButton>\n        </Li>\n      ))}\n    </Ul>\n  );\n};\n","\nexport const getFilteredContacts = (contacts, filter) => {\n  const result = [...contacts].filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLocaleLowerCase())\n  );\n  return result;\n};\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  border: 3px solid black;\n  border-radius: 5px;\n  padding: 16px;\n  max-width: 60vh;\n  margin-bottom: 24px;\n`;\n\nexport const InputContainers = styled.div`\n  gap: 16px;\n\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n\n  margin-bottom: 24px;\n`;\n\nexport const LabelStyled = styled.label`\n  font-size: 24px;\n`;\n\nexport const InputStyled = styled.input`\n  background-color: #f5f5f5;\n  border-radius: 5px;\n  box-shadow: 0 2px 4px rgb(0 0 0 / 20%);\n  transition: box-shadow 0.3s ease;\n\n  font-size: 16px;\n  padding: 8px;\n  border: 1px solid #ccc;\n  width: 200px;\n  &:hover,\n  &:focus,\n  &:active {\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\n    cursor: pointer;\n  }\n`;\n\nexport const Button = styled.button`\n  font-size: 16px;\n  padding: 8px 16px;\n  background-color: #0080ff;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  &:hover,\n  &:focus {\n    background-color: #0022cc;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContactsItems } from 'redux/contacts/selectors';\nimport {\n  Form,\n  InputContainers,\n  LabelStyled,\n  InputStyled,\n  Button,\n} from './ContactFormStyled';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsItems);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const nameValue = e.target.elements.name.value;\n    const numberValue = e.target.elements.number.value;\n\n    const existingContact = contacts.find(\n      contact => contact.name === nameValue\n    );\n\n    if (existingContact) {\n      alert('Contact with this name already exists');\n    } else {\n      dispatch(addContact({ name: nameValue, number: numberValue }));\n      form.reset();\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <InputContainers>\n        <LabelStyled>Name</LabelStyled>\n        <InputStyled\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <LabelStyled>Number</LabelStyled>\n        <InputStyled\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </InputContainers>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  font-size: 22px;\n  margin-right: 22px;\n`;\n\nexport const Input = styled.input`\n  background-color: #f5f5f5;\n  border-radius: 5px;\n  box-shadow: 0 2px 4px rgb(0 0 0 / 20%);\n  transition: all 0.3s ease;\n\n  font-size: 16px;\n  padding: 8px;\n  border: 1px solid #0062cc;\n  width: 200px;\n  &:hover,\n  &:focus,\n  &:active {\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\n    cursor: pointer;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Label, Input } from './FilterStyled';\n\nimport { userFilter } from 'redux/contacts/slice';\nimport { selectFilter } from 'redux/contacts/selectors';\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const handleFilterChange = e => {\n    const filterValue = e.target.value;\n    dispatch(userFilter(filterValue));\n  };\n\n  return (\n    <div>\n      <Label>Find contacts by name:</Label>\n      <Input type=\"text\" onChange={handleFilterChange} defaultValue={filter} />\n    </div>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchAllContacts } from 'redux/contacts/operations';\nimport {\n  selectLoadingValue,\n  selectError,\n  applayFilter,\n} from 'redux/contacts/selectors';\nimport { selectToken } from 'redux/auth/selectors';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { Filter } from '../components/Filter/Filter';\n\n\nexport const Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoadingValue);\n  const error = useSelector(selectError);\n  const token = useSelector(selectToken);\n  const contactsList = useSelector(applayFilter);\n\n  useEffect(() => {\n    token && dispatch(fetchAllContacts());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [token]);\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <ContactForm />\n\n      <Filter />\n      {contactsList.length === 0 ? (\n        <h2>Add your contacts</h2>\n      ) : (\n        <h2>Contacts</h2>\n      )}\n\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;"],"names":["selectContactsItems","state","contacts","items","selectFilter","filter","selectLoadingValue","isLoading","selectError","error","applayFilter","createSelector","contact","name","toLowerCase","includes","Ul","styled","Li","Span","DeleteButton","ContactList","dispatch","useDispatch","filteredContacts","toLocaleLowerCase","getFilteredContacts","useSelector","useEffect","fetchAllContacts","map","number","type","onClick","deleteContact","id","Form","InputContainers","LabelStyled","InputStyled","Button","ContactForm","onSubmit","e","preventDefault","form","target","nameValue","elements","value","numberValue","find","alert","addContact","reset","pattern","title","required","Label","Input","Filter","onChange","filterValue","userFilter","defaultValue","Contacts","token","selectToken","contactsList","length"],"sourceRoot":""}